CURSORS:
cursor-1
 Calculate Interest for Fixed Deposit Amount Using Cursors

SQL> CREATE TABLE AMOUNT(ACCNO INT,YEARS INT,AMOUNT INT,INTEREST INT);

Table created.

SQL> INSERT INTO AMOUNT VALUES(101,2,1000,100);

1 row created.

SQL> INSERT INTO AMOUNT VALUES(102,4,2000,200);

1 row created.

SQL> INSERT INTO AMOUNT VALUES(103,3,3000,300);

1 row created.

SQL> INSERT INTO AMOUNT VALUES(104,4,4000,400);

1 row created.

SQL> INSERT INTO AMOUNT VALUES(105,5,5000,500);

1 row created.

SQL> SELECT * FROM AMOUNT;

     ACCNO      YEARS     AMOUNT   INTEREST
---------- ---------- ---------- ----------
      101          2       1000        100
      102          4       2000        200
      103          3       3000        300
      104          4       4000        400
      105          5       5000        500

SQL> UPDATE AMOUNT SET INTEREST=0 WHERE YEARS<=4;

4 rows updated.

SQL> SELECT * FROM AMOUNT;

     ACCNO      YEARS     AMOUNT   INTEREST
---------- ---------- ---------- ----------
      101          2       1000          0
      102          4       2000          0
      103          3       3000          0
      104          4       4000          0
      105          5       5000        500

SQL> DECLARE
  2  CURSOR AMOUNT IS SELECT * FROM AMOUNT;
  3  BEGIN
  4  FOR I IN AMOUNT
  5  LOOP
  6  IF I.AMOUNT<=1000 THEN
  7  UPDATE AMOUNT SET INTEREST=I.AMOUNT*1 WHERE ACCNO=I.ACCNO;
  8  ELSIF I.AMOUNT>1000 AND I.AMOUNT<=5000 THEN
  9  UPDATE AMOUNT SET INTEREST=I.AMOUNT*2 WHERE ACCNO=I.ACCNO;
 10  ELSE
 11  UPDATE AMOUNT SET INTEREST=I.AMOUNT*3 WHERE ACCNO=I.ACCNO;
 12  END IF;
 13  END LOOP;
 14  END;
 15  /

PL/SQL procedure successfully completed.

SQL> SELECT * FROM AMOUNT;

     ACCNO      YEARS     AMOUNT   INTEREST
---------- ---------- ---------- ----------
      101          2       1000       1000
      102          4       2000       4000
      103          3       3000       6000
      104          4       4000       8000
      105          5       5000      10000

cursor-2
Calculate Electricity Bill Using Cursors

SQL> CREATE TABLE EBILL(EBNO INT PRIMARY KEY,NAME VARCHAR(20),UNITS INT,CHARGES FLOAT);

Table created.

SQL> INSERT INTO EBILL VALUES(1,'SHELLHA',100,99.9);

1 row created.

SQL> INSERT INTO EBILL VALUES(2,'SNEHA',200,88.8);

1 row created.

SQL> INSERT INTO EBILL VALUES(3,'BABU',300,77.7);

1 row created.

SQL> INSERT INTO EBILL VALUES(4,'SANJU',400,66.6);

1 row created.

SQL> SELECT * FROM EBILL;

      EBNO NAME                      UNITS    CHARGES
---------- -------------------- ---------- ----------
         1 SHELLHA                    100       99.9
         2 SNEHA                      200       88.8
         3 BABU                       300       77.7
         4 SANJU                      400       66.6

SQL> DECLARE
  2  CURSOR BILL IS SELECT * FROM EBILL;
  3  BEGIN
  4  FOR I IN BILL
  5  LOOP
  6  IF I.UNITS<=100 THEN
  7  UPDATE EBILL SET CHARGES=I.UNITS*1 WHERE EBNO=I.EBNO;
  8  ELSIF I.UNITS>100 AND I.UNITS<=400 THEN
  9  UPDATE EBILL SET CHARGES=I.UNITS*2 WHERE EBNO=I.EBNO;
 10  ELSE
 11  UPDATE EBILL SET CHARGES=I.UNITS*3 WHERE EBNO=I.EBNO;
 12  END IF;
 13  END LOOP;
 14  END;
 15  /

PL/SQL procedure successfully completed.

Cursor-3
Write PL/SQL code to update values in create tables by using implicit cursors.

SQL> set serveroutput on;

SQL> desc emp1;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(38)
 NAME                                               VARCHAR2(20)
 SALARY                                             NUMBER(38)

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 Raju                      25000
         2 Babu                      15000
         3 Drshya                    32000
         4 John                      32678
         5 Kalam                     48000

SQL> declare
  2  num_rows number(5);
  3  begin
  4  update emp1 set salary=salary+200;
  5  if sql%notfound then
  6  dbms_output.put_line('None of the salaries where updated');
  7  else if sql%found then
  8  num_rows:=sql%rowcount;
  9  dbms_output.put_line('Salaries for '||num_rows||''||' '||'employees are updated');
 10  end if;
 11  end if;
 12  end;
 13  /
Salaries for 5 employees are updated

PL/SQL procedure successfully completed.

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 Raju                      25200
         2 Babu                      15200
         3 Drshya                    32200
         4 John                      32878
         5 Kalam                     48200




SQL> SELECT * FROM EBILL;

      EBNO NAME                      UNITS    CHARGES
---------- -------------------- ---------- ----------
         1 SHELLHA                    100        100
         2 SNEHA                      200        400
         3 BABU                       300        600
         4 SANJU                      400        800

Cursor-4
Given the table works(emp_id,company_name,salary).write a cursor to select the 3 heighest paid employees from the table.


SQL> desc works;

 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID                                    NOT NULL CHAR(8)
 COMPANY_NAME                              NOT NULL VARCHAR2(18)
 SALARY                                             FLOAT(126)

SQL> select * from works;

EMP_ID   COMPANY_NAME           SALARY
-------- ------------------ ----------
E-101    SBI                     71000
E-102    SBI                    108900
E-103    SBT                     40000
E-104    Federal                 37000

SQL> declare
  2  i number:=0;
  3  cursor cur is select emp_id,company_name,salary from works order by salary desc;
  4  r cur%rowtype;
  5  begin
  6  open cur;
  7  loop
  8  exit when i=3;
  9  fetch cur into r;
 10  dbms_output.put_line(r.emp_id||' '||r.company_name||' '||r.salary);
 11  i:=i+1;
 12  end loop;
 13  close cur;
 14  end;
 15  /
E-102    SBI 108900
E-101    SBI 71000
E-103    SBT 40000

PL/SQL procedure successfully completed.

SQL> select emp_id,company_name,salary from works order by salary desc;

EMP_ID   COMPANY_NAME           SALARY
-------- ------------------ ----------
E-102    SBI                    108900
E-101    SBI                     71000
E-103    SBT                     40000
E-104    Federal                 37000

Cursor-5
Calculate the final IA and update the corresponding table for all students.


SQL> set serveroutput on;

SQL> create table IAmarks(reg_no int primary key,scode varchar(10),Test1 number(10),Test2 number(10),Test3 number(10),Final_IAmarks number(10));

Table created.

SQL> insert into IAmarks values(101,'CLAB112',45,34,12,null);

1 row created.

SQL> insert into IAmarks values(104,'DBMS123',33,22,35,null);

1 row created.

SQL> insert into IAmarks values(345,'Pythn236',44,43,42,null);

1 row created.

SQL> desc IAmarks;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 REG_NO                                    NOT NULL NUMBER(38)
 SCODE                                              VARCHAR2(10)
 TEST1                                              NUMBER(10)
 TEST2                                              NUMBER(10)
 TEST3                                              NUMBER(10)
 FINAL_IAMARKS                                      NUMBER(10)

SQL> select * from IAmarks;

    REG_NO SCODE           TEST1      TEST2      TEST3 FINAL_IAMARKS
---------- ---------- ---------- ---------- ---------- -------------
       101 CLAB112            45         34         12
       104 DBMS123            33         22         35
       345 Pythn236           44         43         42
	   
	   
SQL> create or replace procedure avgmarks is
  2  cursor curs is
  3  select greatest(Test1,Test2) as A,greatest(Test1,Test3) as B,greatest(Test3,Test2) as C
  4  from IAmarks where Final_IAmarks is null for update;
  5  C_A number;
  6  C_B number;
  7  C_C number;
  8  C_SM number;
  9  C_AV number;
 10  begin
 11  open curs;
 12  loop
 13  fetch curs into C_A, C_B, C_C;
 14  exit when curs%notfound;
 15  dbms_output.put_line(C_A || ' ' || C_B || ' ' || C_C);
 16  if (C_A != C_B) then
 17  C_SM:=C_A+C_B;
 18  else
 19  C_SM:=C_A+C_C;
 20  end if;
 21  C_AV:=C_SM/2;
 22  update IAmarks set Final_IAmarks=C_AV where current of curs;
 23  end loop;
 24  close curs;
 25  end;
 26  /

Procedure created.

SQL> exec avgmarks;
45 45 34
33 35 35
44 44 43

PL/SQL procedure successfully completed.

SQL> select * from IAmarks;

    REG_NO SCODE           TEST1      TEST2      TEST3 FINAL_IAMARKS
---------- ---------- ---------- ---------- ---------- -------------
       101 CLAB112            45         34         12            40
       104 DBMS123            33         22         35            34
       345 Pythn236           44         43         42            44

