TRIGGER:	  
Trigger-1 
Create a Simple Trigger that does not allow Insert,Update and Delete Operations on the Table.


SQL> connect system/12345678
Connected.
SQL> select * from item;

   ITEM_ID ITEMNAME                  PRICE
---------- -------------------- ----------
      2334 Geera                    206.25
      2532 Corn soup                 34.65
      2124 Lays                         20
      4531 Set                       99.99
      2319 Duracell                   45.5

SQL> create trigger tr1
  2  BEFORE INSERT OR UPDATE OR DELETE ON item FOR EACH ROW
  3  begin
  4  raise_application_error(-20010,'you are not permitted to do this operation');
  5  end;
  6  /

Trigger created.

SQL> insert into item values(5555,'Sweets',100);
insert into item values(5555,'Sweets',100)
            *
ERROR at line 1:
ORA-20010: you are not permitted to do this operation
ORA-06512: at "SYSTEM.TR1", line 2
ORA-04088: error during execution of trigger 'SYSTEM.TR1'

Trigger-2
Create a trigger that displays a message after update, Delete, Insert operations on a table.

SQL> connect system/12345678;
Connected.
SQL> set serveroutput on;
SQL> drop trigger trg;

Trigger dropped.

SQL> desc emp1;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(38)
 NAME                                               VARCHAR2(20)
 SALARY                                             NUMBER(38)

SQL>
SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 maneesha                  25000
         2 anu                       30000
         3 aravind                   27000
         4 manu                      20000

SQL> create or replace trigger trg
  2  after update or insert or delete on emp1
  3  for each row
  4  begin
  5  if updating then
  6  dbms_output.put_line('updated');
  7  elsif inserting then
  8  dbms_output.put_line('insertion done');
  9  elsif deleting then
 10  dbms_output.put_line('deleted');
 11  end if;
 12  end;
 13  /

Trigger created.

SQL> insert into emp1 values(5,'Babu',29000);
insertion done

1 row created.

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 maneesha                  25000
         2 anu                       30000
         3 aravind                   27000
         4 manu                      20000
         5 Babu                      29000

SQL> delete from emp1 where id=4;
deleted

1 row deleted.

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 maneesha                  25000
         2 anu                       30000
         3 aravind                   27000
         5 Babu                      29000

SQL> update emp1 set salary=32000 where id=2;
updated

1 row updated.

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 maneesha                  25000
         2 anu                       32000
         3 aravind                   27000
         5 Babu                      29000

Trigger-3
Create a trigger that gets invoked before insert operation on a table. The trigger should convert employee name to uppercase before its stored in the table.

SQL> set serveroutput on;

SQL> create or replace trigger tr2
  2  before insert on emp1
  3  for each row
  4  begin
  5  :new.name:=upper(:new.name);
  6  end;
  7  /

Trigger created.

SQL> select * from emp1;

        ID NAME                     SALARY
---------- -------------------- ----------
         1 Raju                      25200
         2 Babu                      15200
         3 Drshya                    32200
         4 John                      32878
         5 Kalam                     48200

SQL> desc emp1;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(38)
 NAME                                               VARCHAR2(20)
 SALARY                                             NUMBER(38)

Trigger-4
Create a row-level trigger for the customers table that would fire for UPDATE operations performed on the CUSTOMERS table. This trigger should display the salary difference between the old values and new values

SQL> CREATE OR REPLACE TRIGGER TRG1
  2   BEFORE UPDATE ON CUSTOMERS FOR EACH ROW
  3   WHEN(NEW.ID > 0)
  4   DECLARE
  5   SAL_DIFFERENCE NUMBER;
  6   BEGIN
  7   SAL_DIFFERENCE:=:NEW.SALARY-:OLD.SALARY;
  8   DBMS_OUTPUT.PUT_LINE('OLD SALARY:'||:OLD.SALARY);
  9   DBMS_OUTPUT.PUT_LINE('NEW SALARY:'||:NEW.SALARY);
 10   DBMS_OUTPUT.PUT_LINE('SALARY DIFFERENCE:'||SAL_DIFFERENCE);
 11   END;
 12   /

Trigger created.

SQL> SELECT * FROM CUSTOMERS;

        ID NAME                        AGE            ADDRESS            SALARY
-----------------------------------------------------------------------------------
         1 Dilsha                       32           AHMEDABAD            2000

         2 Harsha                       25             DELHI              1500

         3 Anagha                       32             MAYSOOR            2000

         4 Babu                         23              KOTA              2000

         5 Zhan                         25             MUMBAI             6500

         6 Hardik                       27             BHOPAL             8500

         7 Raju                         22               MP               4500

         8 Ammu                         24             INDORE             1000


8 rows selected.

SQL> UPDATE CUSTOMERS SET SALARY=6000 WHERE ID=7;

1 row updated.

SQL> SELECT * FROM CUSTOMERS;

        ID NAME                        AGE            ADDRESS            SALARY
-----------------------------------------------------------------------------------
         1 Dilsha                       32           AHMEDABAD            2000

         2 Harsha                       25             DELHI              1500

         3 Anagha                       32             MAYSOOR            2000

         4 Babu                         23              KOTA              2000

         5 Zhan                         25             MUMBAI             6500

         6 Hardik                       27             BHOPAL             8500

         7 Raju                         22               MP               6000

         8 Ammu                         24             INDORE             1000
